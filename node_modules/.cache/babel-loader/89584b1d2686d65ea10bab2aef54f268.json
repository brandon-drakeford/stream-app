{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brand\\\\OneDrive\\\\Desktop\\\\react-projects\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React, { useEffect } from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\n\nfunction StreamShow(props) {\n  let videoRef = React.createRef();\n  useEffect(() => {\n    const {\n      id\n    } = props.match.params.id;\n    console.log(videoRef);\n    props.fetchStream(id);\n    const player = flv.createPlayer({\n      type: 'flv',\n      url: `http://locahost:8000/live/${id}.flv`\n    });\n    player.attachMediaElement(videoRef.current);\n    player.load();\n  }, []);\n\n  function renderContent() {\n    if (!props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    }\n\n    const {\n      title,\n      description\n    } = props.stream;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: videoRef,\n      style: {\n        width: '100%'\n      },\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, description));\n  }\n\n  return renderContent();\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamShow);","map":{"version":3,"sources":["C:/Users/Brand/OneDrive/Desktop/react-projects/streams/client/src/components/streams/StreamShow.js"],"names":["React","useEffect","flv","connect","Link","Modal","history","fetchStream","deleteStream","StreamShow","props","videoRef","createRef","id","match","params","console","log","player","createPlayer","type","url","attachMediaElement","current","load","renderContent","stream","title","description","width","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAExB,MAAIC,QAAQ,GAAGX,KAAK,CAACY,SAAN,EAAf;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAAEY,MAAAA;AAAF,QAASH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,EAAlC;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEAD,IAAAA,KAAK,CAACH,WAAN,CAAkBM,EAAlB;AAEA,UAAMK,MAAM,GAAGhB,GAAG,CAACiB,YAAJ,CAAkB;AAC7BC,MAAAA,IAAI,EAAE,KADuB;AAE7BC,MAAAA,GAAG,EAAG,6BAA4BR,EAAG;AAFR,KAAlB,CAAf;AAKAK,IAAAA,MAAM,CAACI,kBAAP,CAA0BX,QAAQ,CAACY,OAAnC;AACAL,IAAAA,MAAM,CAACM,IAAP;AACH,GAdQ,EAcN,EAdM,CAAT;;AAkBA,WAASC,aAAT,GAA0B;AACtB,QAAI,CAACf,KAAK,CAACgB,MAAX,EAAmB;AACf,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAED,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyBlB,KAAK,CAACgB,MAArC;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,GAAG,EAAEf,QAAZ;AAAsB,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE;AAAT,OAA7B;AAA+C,MAAA,QAAQ,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAL,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,WAAL,CAHJ,CADJ;AAOH;;AAED,SAAOH,aAAa,EAApB;AACH;;AAED,MAAMK,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAAClB,KAAT,CAAeC,MAAf,CAAsBF,EAApC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAAE2B,eAAF,EAAmB;AAAEvB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAnB,CAAP,CAAyDC,UAAzD,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport flv from 'flv.js'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from '../Modal'\r\nimport history from '../../history'\r\nimport { fetchStream, deleteStream } from '../../actions'\r\n\r\nfunction StreamShow (props) {\r\n\r\n    let videoRef = React.createRef()\r\n    \r\n    useEffect(() => {\r\n        const { id } = props.match.params.id\r\n\r\n        console.log(videoRef)\r\n\r\n        props.fetchStream(id)\r\n\r\n        const player = flv.createPlayer ({\r\n            type: 'flv',\r\n            url: `http://locahost:8000/live/${id}.flv`\r\n        })\r\n\r\n        player.attachMediaElement(videoRef.current)\r\n        player.load()\r\n    }, [])\r\n\r\n   \r\n\r\n    function renderContent () {\r\n        if (!props.stream) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        const { title, description } = props.stream\r\n\r\n        return (\r\n            <div>\r\n                <video ref={videoRef} style={{ width: '100%'}} controls />\r\n                <h1>{title}</h1>\r\n                <h5>{description}</h5>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return renderContent()\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id]\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, { fetchStream, deleteStream })(StreamShow)"]},"metadata":{},"sourceType":"module"}