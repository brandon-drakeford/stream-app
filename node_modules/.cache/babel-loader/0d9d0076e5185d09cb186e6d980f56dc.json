{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brand\\\\OneDrive\\\\Desktop\\\\react-projects\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nfunction StreamShow(props) {\n  useEffect(() => {\n    props.fetchStream(props.match.params.id);\n  }, []);\n  const id = props.match.params.id;\n\n  function renderContent() {\n    if (!props.stream) {\n      return 'Are you sure you want to delete this stream?';\n    }\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    }, \"Are you sure you want to delete \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 51\n      }\n    }, props.stream.title), \" stream?\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  });\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["C:/Users/Brand/OneDrive/Desktop/react-projects/streams/client/src/components/streams/StreamShow.js"],"names":["React","useEffect","connect","fetchStream","StreamShow","props","match","params","id","renderContent","stream","title","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAExBJ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACF,WAAN,CAAkBE,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMA,EAAE,GAAGH,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAA9B;;AAKA,WAASC,aAAT,GAA0B;AACtB,QAAI,CAACJ,KAAK,CAACK,MAAX,EAAmB;AACf,aAAO,8CAAP;AACH;;AAED,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASL,KAAK,CAACK,MAAN,CAAaC,KAAtB,CAAnC,aAAP;AACH;;AAID,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAMH;;AAED,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAAEU,eAAF,EAAmB;AAAET,EAAAA;AAAF,CAAnB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStream } from '../../actions'\r\n\r\nfunction StreamShow (props) {\r\n    \r\n    useEffect(() => {\r\n        props.fetchStream(props.match.params.id)\r\n    }, [])\r\n\r\n    const id = props.match.params.id\r\n\r\n    \r\n\r\n\r\n    function renderContent () {\r\n        if (!props.stream) {\r\n            return 'Are you sure you want to delete this stream?'\r\n        }\r\n\r\n        return <p>Are you sure you want to delete <strong>{props.stream.title}</strong> stream?</p>\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n           \r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id]\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, { fetchStream })(StreamShow)"]},"metadata":{},"sourceType":"module"}