{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandon.Drakeford\\\\Desktop\\\\react-projects\\\\streams\\\\client\\\\src\\\\components\\\\GoogleAuth.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nfunction GoogleAuth(props) {\n  const [authMethod, setAuthMethod] = useState(null);\n  useEffect(() => {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '1068486064245-b6gc1pjkgm8bjeqpe7324d44g9de3j8n.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        const auth = window.gapi.auth2.getAuthInstance();\n        onAuthChange(auth);\n        setAuthMethod(window.gapi.auth2);\n        auth.isSignedIn.listen(onAuthChange);\n      });\n    });\n  });\n\n  function onAuthChange(signedIn) {\n    if (signedIn.get().isSignedIn) {\n      props.signIn();\n    } else {\n      props.signOut();\n    }\n  }\n\n  function onSignIn() {\n    const signInMethod = authMethod.getAuthInstance();\n    return signInMethod.signIn();\n  }\n\n  function onSignOut() {\n    const signOutMethod = authMethod.getAuthInstance();\n    return signOutMethod.signOut();\n  }\n\n  function renderAuthButton() {\n    if (props.isSignedIn === null) {\n      return null;\n    } else if (props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: onSignOut,\n        className: \"ui red google button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }), \"Sign Out\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: onSignIn,\n        className: \"ui red google button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"google icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }), \"Sign In with Google\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }\n  }, renderAuthButton());\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["C:/Users/Brandon.Drakeford/Desktop/react-projects/streams/client/src/components/GoogleAuth.js"],"names":["React","useEffect","useState","connect","signIn","signOut","GoogleAuth","props","authMethod","setAuthMethod","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","onAuthChange","isSignedIn","listen","signedIn","get","onSignIn","signInMethod","onSignOut","signOutMethod","renderAuthButton","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAExB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAE,IAAF,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,2EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,cAAMC,IAAI,GAAGR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAb;AACAC,QAAAA,YAAY,CAACH,IAAD,CAAZ;AACAT,QAAAA,aAAa,CAACC,MAAM,CAACC,IAAP,CAAYQ,KAAb,CAAb;AAEAD,QAAAA,IAAI,CAACI,UAAL,CAAgBC,MAAhB,CAAuBF,YAAvB;AACH,OATD;AAUH,KAXD;AAYF,GAbO,CAAT;;AAeA,WAASA,YAAT,CAAuBG,QAAvB,EAAiC;AAC7B,QAAIA,QAAQ,CAACC,GAAT,GAAeH,UAAnB,EAA+B;AAC3Bf,MAAAA,KAAK,CAACH,MAAN;AACH,KAFD,MAEO;AACHG,MAAAA,KAAK,CAACF,OAAN;AACH;AACJ;;AAED,WAASqB,QAAT,GAAqB;AACjB,UAAMC,YAAY,GAAGnB,UAAU,CAACY,eAAX,EAArB;AACA,WAAOO,YAAY,CAACvB,MAAb,EAAP;AACH;;AAED,WAASwB,SAAT,GAAsB;AAClB,UAAMC,aAAa,GAAGrB,UAAU,CAACY,eAAX,EAAtB;AACA,WAAOS,aAAa,CAACxB,OAAd,EAAP;AACH;;AAED,WAASyB,gBAAT,GAA6B;AACzB,QAAIvB,KAAK,CAACe,UAAN,KAAqB,IAAzB,EAA8B;AAC1B,aAAO,IAAP;AACH,KAFD,MAEO,IAAIf,KAAK,CAACe,UAAV,EAAsB;AACzB,0BACI;AAAQ,QAAA,OAAO,EAAEM,SAAjB;AAA4B,QAAA,SAAS,EAAC,sBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,aADJ;AAKH,KANM,MAMA;AACH,0BACI;AAAQ,QAAA,OAAO,EAAEF,QAAjB;AAA2B,QAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,wBADJ;AAKH;AACJ;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMI,gBAAgB,EAAtB,CAAP;AACH;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAChC,SAAO;AACHV,IAAAA,UAAU,EAAEU,KAAK,CAACd,IAAN,CAAWI;AADpB,GAAP;AAGF,CAJD;;AAMA,eAAenB,OAAO,CAAC4B,eAAD,EAAkB;AAAE3B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { signIn, signOut } from '../actions'\r\n\r\nfunction GoogleAuth (props) {\r\n\r\n    const [authMethod, setAuthMethod] = useState (null)\r\n\r\n    useEffect(() => {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({ \r\n                clientId: '1068486064245-b6gc1pjkgm8bjeqpe7324d44g9de3j8n.apps.googleusercontent.com',\r\n                scope: 'email' \r\n            }).then(() => {\r\n                const auth = window.gapi.auth2.getAuthInstance();\r\n                onAuthChange(auth)\r\n                setAuthMethod(window.gapi.auth2)\r\n\r\n                auth.isSignedIn.listen(onAuthChange)\r\n            });\r\n        });\r\n     });\r\n\r\n    function onAuthChange (signedIn) {\r\n        if (signedIn.get().isSignedIn) {\r\n            props.signIn()\r\n        } else {\r\n            props.signOut()\r\n        }\r\n    }\r\n\r\n    function onSignIn () {\r\n        const signInMethod = authMethod.getAuthInstance()\r\n        return signInMethod.signIn()\r\n    }\r\n\r\n    function onSignOut () {\r\n        const signOutMethod = authMethod.getAuthInstance()\r\n        return signOutMethod.signOut()\r\n    }\r\n\r\n    function renderAuthButton () {\r\n        if (props.isSignedIn === null){\r\n            return null\r\n        } else if (props.isSignedIn) {\r\n            return (\r\n                <button onClick={onSignOut} className=\"ui red google button\">\r\n                    <i className=\"google icon\"></i>\r\n                    Sign Out\r\n                </button>)\r\n        } else {\r\n            return (\r\n                <button onClick={onSignIn} className=\"ui red google button\">\r\n                    <i className=\"google icon\"></i>\r\n                    Sign In with Google\r\n                </button>)\r\n        }\r\n    }\r\n \r\n    return <div>{renderAuthButton()}</div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n       isSignedIn: state.auth.isSignedIn\r\n   }    \r\n}\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth)"]},"metadata":{},"sourceType":"module"}