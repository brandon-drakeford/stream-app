{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brand\\\\OneDrive\\\\Desktop\\\\react-projects\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nfunction StreamForm(props) {\n  function renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ui error message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }\n      }, error));\n    }\n  }\n\n  function renderInput({\n    input,\n    label,\n    meta\n  }) {\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    })), renderError(meta));\n  }\n\n  function handleSubmit(formValues) {\n    console.log(formValues);\n    props.onSubmit(formValues);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"ui form error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"title\",\n    component: renderInput,\n    label: \"Enter Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"description\",\n    component: renderInput,\n    label: \"Enter Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ui button primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Submit\"));\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'Please enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'Please enter a description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamForm',\n  validate\n})(StreamForm);","map":{"version":3,"sources":["C:/Users/Brand/OneDrive/Desktop/react-projects/streams/client/src/components/streams/StreamForm.js"],"names":["React","Field","reduxForm","StreamForm","props","renderError","error","touched","renderInput","input","label","meta","className","handleSubmit","formValues","console","log","onSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAExB,WAASC,WAAT,CAAsB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAtB,EAA0C;AACtC,QAAIA,OAAO,IAAID,KAAf,EAAsB;AAClB,0BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBA,KAAzB,CADJ,CADJ;AAKH;AACJ;;AAED,WAASE,WAAT,CAAsB;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAtB,EAA6C;AACzC,UAAMC,SAAS,GAAI,SAAQD,IAAI,CAACL,KAAL,IAAcK,IAAI,CAACJ,OAAnB,GAA6B,OAA7B,GAAsC,EAAG,EAApE;AACA,wBACI;AAAK,MAAA,SAAS,EAAEK,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQF,KAAR,CADJ,eAGI,+CAAWD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ,EAKKJ,WAAW,CAACM,IAAD,CALhB,CADJ;AASH;;AAED,WAASE,YAAT,CAAuBC,UAAvB,EAAmC;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAV,IAAAA,KAAK,CAACa,QAAN,CAAeH,UAAf;AACH;;AAED,sBACI;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAA8B,IAAA,SAAS,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEL,WAA/B;AAA4C,IAAA,KAAK,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,aAAZ;AAA0B,IAAA,SAAS,EAAEA,WAArC;AAAkD,IAAA,KAAK,EAAC,mBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ;AAOH;;AAED,MAAMU,QAAQ,GAAIJ,UAAD,IAAgB;AAC7B,QAAMK,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACL,UAAU,CAACM,KAAhB,EAAuB;AACnBD,IAAAA,MAAM,CAACC,KAAP,GAAe,sBAAf;AACH;;AAED,MAAI,CAACN,UAAU,CAACO,WAAhB,EAA6B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,4BAArB;AACH;;AAED,SAAOF,MAAP;AACH,CAZD;;AAaA,eAAejB,SAAS,CAAC;AACrBoB,EAAAA,IAAI,EAAE,YADe;AAErBJ,EAAAA;AAFqB,CAAD,CAAT,CAGZf,UAHY,CAAf","sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nfunction StreamForm (props) {\r\n\r\n    function renderError ({ error, touched }) {\r\n        if (touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function renderInput ({ input, label, meta }){\r\n        const className = `field ${meta.error && meta.touched ? 'error': ''}`\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n\r\n                <input {...input} />\r\n\r\n                {renderError(meta)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function handleSubmit (formValues) {\r\n        console.log(formValues)\r\n        props.onSubmit(formValues)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"ui form error\">\r\n            <Field name=\"title\" component={renderInput} label=\"Enter Title\" />\r\n            <Field name=\"description\" component={renderInput} label=\"Enter Description\" />\r\n            <button className=\"ui button primary\">Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    if (!formValues.title) {\r\n        errors.title = 'Please enter a title';\r\n    }\r\n\r\n    if (!formValues.description) {\r\n        errors.description = 'Please enter a description';\r\n    }\r\n\r\n    return errors;\r\n}\r\nexport default reduxForm({\r\n    form: 'streamForm',\r\n    validate\r\n})(StreamForm)"]},"metadata":{},"sourceType":"module"}