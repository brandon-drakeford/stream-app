{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brand\\\\OneDrive\\\\Desktop\\\\react-projects\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React, { useEffect } from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\n\nfunction StreamShow(props) {\n  useEffect(() => {\n    props.fetchStream(props.match.params.id);\n  }, []);\n\n  function renderContent() {\n    if (!props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    }\n\n    const {\n      title,\n      description\n    } = props.stream;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, description));\n  }\n\n  return renderContent();\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamShow);","map":{"version":3,"sources":["C:/Users/Brand/OneDrive/Desktop/react-projects/streams/client/src/components/streams/StreamShow.js"],"names":["React","useEffect","flv","connect","Link","Modal","history","fetchStream","deleteStream","StreamShow","props","match","params","id","renderContent","stream","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAExBT,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAACH,WAAN,CAAkBG,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,aAAT,GAA0B;AACtB,QAAI,CAACJ,KAAK,CAACK,MAAX,EAAmB;AACf,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAED,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyBP,KAAK,CAACK,MAArC;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,KAAL,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,WAAL,CAFJ,CADJ;AAMH;;AAED,SAAOH,aAAa,EAApB;AACH;;AAED,MAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAAEe,eAAF,EAAmB;AAAEX,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAnB,CAAP,CAAyDC,UAAzD,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport flv from 'flv.js'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from '../Modal'\r\nimport history from '../../history'\r\nimport { fetchStream, deleteStream } from '../../actions'\r\n\r\nfunction StreamShow (props) {\r\n    \r\n    useEffect(() => {\r\n        props.fetchStream(props.match.params.id)\r\n    }, [])\r\n\r\n    function renderContent () {\r\n        if (!props.stream) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        const { title, description } = props.stream\r\n\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <h5>{description}</h5>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return renderContent()\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id]\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, { fetchStream, deleteStream })(StreamShow)"]},"metadata":{},"sourceType":"module"}