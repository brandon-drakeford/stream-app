{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brand\\\\OneDrive\\\\Desktop\\\\react-projects\\\\streams\\\\client\\\\src\\\\components\\\\GoogleAuth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GoogleAuth(props) {\n  _s();\n\n  const [authMethod, setAuthMethod] = useState(null);\n  useEffect(() => {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '1068486064245-b6gc1pjkgm8bjeqpe7324d44g9de3j8n.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        const auth = window.gapi.auth2.getAuthInstance();\n        onAuthChange(auth.isSignedIn.get(), auth.currentUser.get().getId());\n        setAuthMethod(window.gapi.auth2);\n        auth.isSignedIn.listen(onAuthChange);\n      });\n    });\n  });\n\n  function onAuthChange(isSignedIn, userId) {\n    if (isSignedIn) {\n      props.signIn(userId);\n    } else {\n      props.signOut();\n    }\n  }\n\n  function onSignIn() {\n    const signInMethod = authMethod.getAuthInstance();\n    return signInMethod.signIn();\n  }\n\n  function onSignOut() {\n    const signOutMethod = authMethod.getAuthInstance();\n    return signOutMethod.signOut();\n  }\n\n  function renderAuthButton() {\n    if (props.isSignedIn === null) {\n      return null;\n    } else if (props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSignOut,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), \"Sign Out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSignIn,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), \"Sign In with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '10px'\n    },\n    children: renderAuthButton()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n}\n\n_s(GoogleAuth, \"n3nhv5jadzFAMDWTyu5lCYseL6I=\");\n\n_c = GoogleAuth;\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"sources":["C:/Users/Brand/OneDrive/Desktop/react-projects/streams/client/src/components/GoogleAuth.js"],"names":["React","useEffect","useState","connect","signIn","signOut","GoogleAuth","props","authMethod","setAuthMethod","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","onAuthChange","isSignedIn","get","currentUser","getId","listen","userId","onSignIn","signInMethod","onSignOut","signOutMethod","renderAuthButton","marginTop","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAE,IAAF,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,2EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,cAAMC,IAAI,GAAGR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAb;AACAC,QAAAA,YAAY,CAACH,IAAI,CAACI,UAAL,CAAgBC,GAAhB,EAAD,EAAwBL,IAAI,CAACM,WAAL,CAAiBD,GAAjB,GAAuBE,KAAvB,EAAxB,CAAZ;AACAhB,QAAAA,aAAa,CAACC,MAAM,CAACC,IAAP,CAAYQ,KAAb,CAAb;AAEAD,QAAAA,IAAI,CAACI,UAAL,CAAgBI,MAAhB,CAAuBL,YAAvB;AACH,OATD;AAUH,KAXD;AAYF,GAbO,CAAT;;AAeA,WAASA,YAAT,CAAuBC,UAAvB,EAAmCK,MAAnC,EAA2C;AACvC,QAAIL,UAAJ,EAAgB;AACZf,MAAAA,KAAK,CAACH,MAAN,CAAauB,MAAb;AACH,KAFD,MAEO;AACHpB,MAAAA,KAAK,CAACF,OAAN;AACH;AACJ;;AAED,WAASuB,QAAT,GAAqB;AACjB,UAAMC,YAAY,GAAGrB,UAAU,CAACY,eAAX,EAArB;AACA,WAAOS,YAAY,CAACzB,MAAb,EAAP;AACH;;AAED,WAAS0B,SAAT,GAAsB;AAClB,UAAMC,aAAa,GAAGvB,UAAU,CAACY,eAAX,EAAtB;AACA,WAAOW,aAAa,CAAC1B,OAAd,EAAP;AACH;;AAED,WAAS2B,gBAAT,GAA6B;AACzB,QAAIzB,KAAK,CAACe,UAAN,KAAqB,IAAzB,EAA8B;AAC1B,aAAO,IAAP;AACH,KAFD,MAEO,IAAIf,KAAK,CAACe,UAAV,EAAsB;AACzB,0BACI;AAAQ,QAAA,OAAO,EAAEQ,SAAjB;AAA4B,QAAA,SAAS,EAAC,sBAAtC;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANM,MAMA;AACH,0BACI;AAAQ,QAAA,OAAO,EAAEF,QAAjB;AAA2B,QAAA,SAAS,EAAC,sBAArC;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AACJ;;AAED,sBAAO;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA,cAAoCD,gBAAgB;AAApD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAxDQ1B,U;;KAAAA,U;;AA0DT,MAAM4B,eAAe,GAAIC,KAAD,IAAW;AAChC,SAAO;AACHb,IAAAA,UAAU,EAAEa,KAAK,CAACjB,IAAN,CAAWI;AADpB,GAAP;AAGF,CAJD;;AAMA,eAAenB,OAAO,CAAC+B,eAAD,EAAkB;AAAE9B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { signIn, signOut } from '../actions'\r\n\r\nfunction GoogleAuth (props) {\r\n\r\n    const [authMethod, setAuthMethod] = useState (null)\r\n\r\n    useEffect(() => {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({ \r\n                clientId: '1068486064245-b6gc1pjkgm8bjeqpe7324d44g9de3j8n.apps.googleusercontent.com',\r\n                scope: 'email' \r\n            }).then(() => {\r\n                const auth = window.gapi.auth2.getAuthInstance();\r\n                onAuthChange(auth.isSignedIn.get(), auth.currentUser.get().getId())\r\n                setAuthMethod(window.gapi.auth2)\r\n\r\n                auth.isSignedIn.listen(onAuthChange)\r\n            });\r\n        });\r\n     });\r\n\r\n    function onAuthChange (isSignedIn, userId) {\r\n        if (isSignedIn) {\r\n            props.signIn(userId)\r\n        } else {\r\n            props.signOut()\r\n        }\r\n    }\r\n\r\n    function onSignIn () {\r\n        const signInMethod = authMethod.getAuthInstance()\r\n        return signInMethod.signIn()\r\n    }\r\n\r\n    function onSignOut () {\r\n        const signOutMethod = authMethod.getAuthInstance()\r\n        return signOutMethod.signOut()\r\n    }\r\n\r\n    function renderAuthButton () {\r\n        if (props.isSignedIn === null){\r\n            return null\r\n        } else if (props.isSignedIn) {\r\n            return (\r\n                <button onClick={onSignOut} className=\"ui red google button\">\r\n                    <i className=\"google icon\"></i>\r\n                    Sign Out\r\n                </button>)\r\n        } else {\r\n            return (\r\n                <button onClick={onSignIn} className=\"ui red google button\">\r\n                    <i className=\"google icon\"></i>\r\n                    Sign In with Google\r\n                </button>)\r\n        }\r\n    }\r\n \r\n    return <div style={{ marginTop: '10px' }}>{renderAuthButton()}</div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n       isSignedIn: state.auth.isSignedIn\r\n   }    \r\n}\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth)"]},"metadata":{},"sourceType":"module"}