{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brand\\\\OneDrive\\\\Desktop\\\\react-projects\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StreamForm(props) {\n  function renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  function renderInput({\n    input,\n    label,\n    meta\n  }) {\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), renderError(meta)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  function onSubmit(formValues) {\n    props.onSubmit(formValues);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit(onSubmit),\n    className: \"ui form error\",\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      name: \"title\",\n      component: renderInput,\n      label: \"Enter Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: \"description\",\n      component: renderInput,\n      label: \"Enter Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ui button primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_c = StreamForm;\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'Please enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'Please enter a description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamForm',\n  validate\n})(StreamForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamForm\");","map":{"version":3,"sources":["C:/Users/Brand/OneDrive/Desktop/react-projects/streams/client/src/components/streams/StreamForm.js"],"names":["React","Field","reduxForm","StreamForm","props","renderError","error","touched","renderInput","input","label","meta","className","onSubmit","formValues","handleSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAExB,WAASC,WAAT,CAAsB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAtB,EAA0C;AACtC,QAAIA,OAAO,IAAID,KAAf,EAAsB;AAClB,0BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AACJ;;AAED,WAASE,WAAT,CAAsB;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAtB,EAA6C;AACzC,UAAMC,SAAS,GAAI,SAAQD,IAAI,CAACL,KAAL,IAAcK,IAAI,CAACJ,OAAnB,GAA6B,OAA7B,GAAsC,EAAG,EAApE;AACA,wBACI;AAAK,MAAA,SAAS,EAAEK,SAAhB;AAAA,8BACI;AAAA,kBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,sBAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,cAHJ,EAKKJ,WAAW,CAACM,IAAD,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAED,WAASE,QAAT,CAAmBC,UAAnB,EAA+B;AAC3BV,IAAAA,KAAK,CAACS,QAAN,CAAeC,UAAf;AACH;;AAED,sBACI;AAAM,IAAA,QAAQ,EAAEV,KAAK,CAACW,YAAN,CAAmBF,QAAnB,CAAhB;AAA8C,IAAA,SAAS,EAAC,eAAxD;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEL,WAA/B;AAA4C,MAAA,KAAK,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAEA,WAArC;AAAkD,MAAA,KAAK,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KApCQL,U;;AAsCT,MAAMa,QAAQ,GAAIF,UAAD,IAAgB;AAC7B,QAAMG,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACH,UAAU,CAACI,KAAhB,EAAuB;AACnBD,IAAAA,MAAM,CAACC,KAAP,GAAe,sBAAf;AACH;;AAED,MAAI,CAACJ,UAAU,CAACK,WAAhB,EAA6B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,4BAArB;AACH;;AAED,SAAOF,MAAP;AACH,CAZD;;AAaA,eAAef,SAAS,CAAC;AACrBkB,EAAAA,IAAI,EAAE,YADe;AAErBJ,EAAAA;AAFqB,CAAD,CAAT,CAGZb,UAHY,CAAf","sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nfunction StreamForm (props) {\r\n\r\n    function renderError ({ error, touched }) {\r\n        if (touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function renderInput ({ input, label, meta }){\r\n        const className = `field ${meta.error && meta.touched ? 'error': ''}`\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n\r\n                <input {...input} />\r\n\r\n                {renderError(meta)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function onSubmit (formValues) {\r\n        props.onSubmit(formValues)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit(onSubmit)} className=\"ui form error\">\r\n            <Field name=\"title\" component={renderInput} label=\"Enter Title\" />\r\n            <Field name=\"description\" component={renderInput} label=\"Enter Description\" />\r\n            <button className=\"ui button primary\">Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    if (!formValues.title) {\r\n        errors.title = 'Please enter a title';\r\n    }\r\n\r\n    if (!formValues.description) {\r\n        errors.description = 'Please enter a description';\r\n    }\r\n\r\n    return errors;\r\n}\r\nexport default reduxForm({\r\n    form: 'streamForm',\r\n    validate\r\n})(StreamForm)"]},"metadata":{},"sourceType":"module"}