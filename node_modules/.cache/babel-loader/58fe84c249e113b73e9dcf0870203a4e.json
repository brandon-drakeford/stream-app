{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brand\\\\OneDrive\\\\Desktop\\\\react-projects\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StreamList(props) {\n  _s();\n\n  useEffect(() => {\n    props.fetchStreams();\n  }, []);\n\n  function renderAdminPanel(stream) {\n    if (stream.userId === props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/edit/${stream.id}`,\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/delete/${stream.id}`,\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  function renderCreate() {\n    if (props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          children: \"Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  function renderList() {\n    if (props.streams.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui placeholder segment\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"ui icon header\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"play icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: \"Please Create A Stream\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    }\n\n    return props.streams.map(stream => {\n      if (!stream.userId === props.currentUserId) {\n        return null;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [renderAdminPanel(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large play circle red large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/streams/show/${stream.id}`,\n            className: \"header\",\n            children: stream.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"ui grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"sixteen wide column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), renderCreate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StreamList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = StreamList;\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamList\");","map":{"version":3,"sources":["C:/Users/Brand/OneDrive/Desktop/react-projects/streams/client/src/components/streams/StreamList.js"],"names":["React","useEffect","connect","Link","fetchStreams","StreamList","props","renderAdminPanel","stream","userId","currentUserId","id","renderCreate","isSignedIn","textAlign","renderList","streams","length","map","title","description","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { fetchStreams } from '../../actions'\r\n\r\nfunction StreamList (props) {\r\n\r\n    useEffect(() => {\r\n        props.fetchStreams()\r\n    }, [])\r\n\r\n    function renderAdminPanel (stream) {\r\n        if (stream.userId === props.currentUserId) {\r\n            return (\r\n                <div className=\"right floated content\">\r\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\r\n                    <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">Delete</Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function renderCreate () {\r\n        if (props.isSignedIn) {\r\n            return (\r\n                <div style={{ textAlign: 'right' }}>\r\n                    <Link to=\"/streams/new\" className=\"ui button primary\">Create Stream</Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function renderList () {\r\n        if (props.streams.length === 0) {\r\n            return (\r\n                <div className=\"ui placeholder segment\">\r\n                    <h1 className=\"ui icon header\">\r\n                       <i className=\"play icon\"></i>\r\n\r\n                       <div className=\"content\">Please Create A Stream</div>\r\n                    </h1>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return props.streams.map(stream => {\r\n            if (!stream.userId === props.currentUserId) {\r\n                return null\r\n            }\r\n\r\n            return (\r\n                <div className=\"item\" key={stream.id}>\r\n                    {renderAdminPanel(stream)}\r\n\r\n                    <i className=\"large play circle red large\" />\r\n                    <div className=\"content\">\r\n                        <Link to={`/streams/show/${stream.id}`} className=\"header\">{stream.title}</Link>\r\n\r\n                        <div className=\"description\">\r\n                            {stream.description}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div class=\"ui grid\">\r\n            <div class=\"sixteen wide column\">\r\n                <h2>Streams</h2>\r\n            \r\n                <div className=\"ui celled list\">{renderList()}</div>\r\n                \r\n                {renderCreate()}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        streams: Object.values(state.streams),\r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList)\r\n\r\n"]},"metadata":{},"sourceType":"module"}